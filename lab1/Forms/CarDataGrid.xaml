<UserControl
    x:Class="CarApp.CarDataGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:CarApp"
    xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
    mc:Ignorable="d">

    <StackPanel Orientation="Vertical">
        <DataGrid
            ItemsSource="{Binding Path=Database.CarBindings}"
            AutoGenerateColumns="false"
            Name="Grid"
            SelectedIndex="{Binding Path=SelectedIndex}"
            >
            <DataGrid.ContextMenu>
                <ContextMenu StaysOpen="true">
                    <MenuItem
                        Header="Add"
                        IsEnabled="{Binding CanAddCar}"
                        Click="AddNewCar"
                        />
                    <MenuItem
                        Header="Remove"
                        IsEnabled="{Binding CanRemoveCar}"
                        Click="RemoveCurrentCar"
                        />
                    <MenuItem
                        Header="Pop into new document"
                        IsEnabled="{Binding CanPopCarIntoNewDocument}"
                        Click="PopCarIntoNewDocument"
                        />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTemplateColumn
                    Header="Manufactured On"
                    >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker
                                SelectedDate="{local:ReactiveBinding ManufacturedDate}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTemplateColumn Header="Numberplate Text">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                local:Properties.Focus="True"
                                Text="{local:ReactiveBinding NumberplateText}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTemplateColumn Header="Manufacturer">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                local:Properties.Focus="True"
                                ItemsSource="{Binding Path=Domain.Manufacturers}"
                                SelectedIndex="{local:ReactiveBinding ManufacturerId}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Country">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                local:Properties.Focus="True"
                                ItemsSource="{Binding Path=Domain.Countries}"
                                SelectedIndex="{local:ReactiveBinding CountryId}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Engine Kind">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                local:Properties.Focus="True"
                                ItemsSource="{Binding Path=Domain.EngineKinds}"
                                SelectedIndex="{local:ReactiveBinding EngineKindIndex}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Price">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <toolkit:DoubleUpDown
                                    local:Properties.Focus="True"
                                    Value="{
                                        local:ReactiveBinding Price_Value,
                                        StringFormat='#.00'
                                    }"
                                    Increment="10"
                                    Minimum="0.01"
                                    Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                    />
                                <ComboBox
                                    ItemsSource="{Binding Path=Domain.CurrencyKinds}"
                                    SelectedIndex="{local:ReactiveBinding Price_KindIndex}"
                                    Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                    />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Has Owner">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox
                                local:Properties.Focus="True"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                IsChecked="{local:ReactiveBinding HasOwner}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                    
                <DataGridTemplateColumn Header="Owner First Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                local:Properties.Focus="True"
                                Text="{local:ReactiveBinding Owner_FirstName}"
                                IsEnabled="{Binding HasOwner}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Owner Last Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox
                                local:Properties.Focus="True"
                                Text="{local:ReactiveBinding Owner_LastName}"
                                IsEnabled="{Binding HasOwner}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTemplateColumn Header="Color">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <toolkit:ColorPicker
                                local:Properties.Focus="True"
                                SelectedColor="{local:ReactiveBinding Windows_Media_Color}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Kilometers Traveled">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <toolkit:IntegerUpDown
                                local:Properties.Focus="True"
                                Value="{
                                    local:ReactiveBinding KilometersTravelled,
                                    StringFormat='#'
                                }"
                                Increment="100"
                                Minimum="0"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Orientation="Horizontal">
            <Button
                Content="Add"
                Click="AddNewCar"
                IsEnabled="{Binding CanAddCar}"
                />
            <Button
                Content="Remove"
                Click="RemoveCurrentCar"
                IsEnabled="{Binding CanRemoveCar}"
                />
        </StackPanel>
    </StackPanel>
</UserControl>
